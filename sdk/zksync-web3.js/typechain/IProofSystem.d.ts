/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IProofSystemInterface extends ethers.utils.Interface {
  functions: {
    "initialize(uint256,address,address,address,address,tuple,bytes32,bytes32,bytes32,uint256)": FunctionFragment;
    "newChain(uint256,address,address)": FunctionFragment;
    "setVerifierParams(tuple)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      BigNumberish,
      string,
      string,
      string,
      string,
      {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      BytesLike,
      BytesLike,
      BytesLike,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "newChain",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setVerifierParams",
    values: [
      {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      }
    ]
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "newChain", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setVerifierParams",
    data: BytesLike
  ): Result;

  events: {
    "NewProofChain(uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NewProofChain"): EventFragment;
}

export class IProofSystem extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IProofSystemInterface;

  functions: {
    initialize(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(uint256,address,address,address,address,(bytes32,bytes32,bytes32),bytes32,bytes32,bytes32,uint256)"(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    newChain(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newChain(uint256,address,address)"(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setVerifierParams(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setVerifierParams((bytes32,bytes32,bytes32))"(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  initialize(
    _chainId: BigNumberish,
    _bridgeheadChainContract: string,
    _governor: string,
    _allowList: string,
    _verifier: string,
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    _l2BootloaderBytecodeHash: BytesLike,
    _l2DefaultAccountBytecodeHash: BytesLike,
    _blockHashZero: BytesLike,
    _priorityTxMaxGasLimit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(uint256,address,address,address,address,(bytes32,bytes32,bytes32),bytes32,bytes32,bytes32,uint256)"(
    _chainId: BigNumberish,
    _bridgeheadChainContract: string,
    _governor: string,
    _allowList: string,
    _verifier: string,
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    _l2BootloaderBytecodeHash: BytesLike,
    _l2DefaultAccountBytecodeHash: BytesLike,
    _blockHashZero: BytesLike,
    _priorityTxMaxGasLimit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  newChain(
    _chainID: BigNumberish,
    _chainContract: string,
    _governor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newChain(uint256,address,address)"(
    _chainID: BigNumberish,
    _chainContract: string,
    _governor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setVerifierParams(
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setVerifierParams((bytes32,bytes32,bytes32))"(
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    initialize(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(uint256,address,address,address,address,(bytes32,bytes32,bytes32),bytes32,bytes32,bytes32,uint256)"(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    newChain(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "newChain(uint256,address,address)"(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setVerifierParams(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<void>;

    "setVerifierParams((bytes32,bytes32,bytes32))"(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    NewProofChain(
      _chainId: BigNumberish | null,
      _proofChainContract: string | null
    ): EventFilter;
  };

  estimateGas: {
    initialize(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(uint256,address,address,address,address,(bytes32,bytes32,bytes32),bytes32,bytes32,bytes32,uint256)"(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    newChain(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newChain(uint256,address,address)"(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setVerifierParams(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setVerifierParams((bytes32,bytes32,bytes32))"(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initialize(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(uint256,address,address,address,address,(bytes32,bytes32,bytes32),bytes32,bytes32,bytes32,uint256)"(
      _chainId: BigNumberish,
      _bridgeheadChainContract: string,
      _governor: string,
      _allowList: string,
      _verifier: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      _blockHashZero: BytesLike,
      _priorityTxMaxGasLimit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    newChain(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newChain(uint256,address,address)"(
      _chainID: BigNumberish,
      _chainContract: string,
      _governor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setVerifierParams(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setVerifierParams((bytes32,bytes32,bytes32))"(
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
