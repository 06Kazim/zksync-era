/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IProofChain } from "./IProofChain";

export class IProofChainFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProofChain {
    return new Contract(address, _abi, signerOrProvider) as IProofChain;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "BlockCommit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "BlockExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBlocksCommitted",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBlocksVerified",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBlocksExecuted",
        type: "uint256",
      },
    ],
    name: "BlocksRevert",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "previousLastVerifiedBlock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "currentLastVerifiedBlock",
        type: "uint256",
      },
    ],
    name: "BlocksVerification",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPorterAvailable",
        type: "bool",
      },
    ],
    name: "IsPorterAvailableStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "NewGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldPendingGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPendingGovernor",
        type: "address",
      },
    ],
    name: "NewPendingGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPriorityTxMaxGasLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPriorityTxMaxGasLimit",
        type: "uint256",
      },
    ],
    name: "NewPriorityTxMaxGasLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "facet",
                type: "address",
              },
              {
                internalType: "enum Diamond.Action",
                name: "action",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "isFreezable",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct Diamond.FacetCut[]",
            name: "facetCuts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "initAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "initCalldata",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Diamond.DiamondCutData",
        name: "diamondCut",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalSalt",
        type: "bytes32",
      },
    ],
    name: "ProposeTransparentUpgrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validatorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "ValidatorStatusUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "indexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "numberOfLayer1Txs",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "priorityOperationsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "l2LogsTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
        ],
        internalType: "struct IProofExecutor.StoredBlockInfo",
        name: "_lastCommittedBlockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "indexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "newStateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "numberOfLayer1Txs",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "l2LogsTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "priorityOperationsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "initialStorageChanges",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "repeatedStorageChanges",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "l2Logs",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "l2ArbitraryLengthMessages",
            type: "bytes[]",
          },
          {
            internalType: "bytes[]",
            name: "factoryDeps",
            type: "bytes[]",
          },
        ],
        internalType: "struct IProofExecutor.CommitBlockInfo[]",
        name: "_newBlocksData",
        type: "tuple[]",
      },
    ],
    name: "commitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "indexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "numberOfLayer1Txs",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "priorityOperationsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "l2LogsTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
        ],
        internalType: "struct IProofExecutor.StoredBlockInfo[]",
        name: "_blocksData",
        type: "tuple[]",
      },
    ],
    name: "executeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facets",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IProofGetters.Facet[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgehead",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getL2BootloaderBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getL2DefaultAccountBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getL2SystemContractsUpgradeBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getL2SystemContractsUpgradeTxHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriorityTxMaxGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposedUpgradeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposedUpgradeTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSecurityCouncil",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBlocksCommitted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBlocksExecuted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBlocksVerified",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUpgradeProposalState",
    outputs: [
      {
        internalType: "enum ProofUpgradeState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVerifierParams",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VerifierParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bridgeheadChainContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
      {
        internalType: "contract IAllowList",
        name: "_allowList",
        type: "address",
      },
      {
        internalType: "contract Verifier",
        name: "_verifier",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VerifierParams",
        name: "_verifierParams",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_l2BootloaderBytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_l2DefaultAccountBytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_blockHashZero",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_priorityTxMaxGasLimit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isApprovedBySecurityCouncil",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDiamondStorageFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "isFacetFreezable",
    outputs: [
      {
        internalType: "bool",
        name: "isFreezable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "isFunctionFreezable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "indexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "numberOfLayer1Txs",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "priorityOperationsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "l2LogsTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
        ],
        internalType: "struct IProofExecutor.StoredBlockInfo",
        name: "_prevBlock",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "indexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "numberOfLayer1Txs",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "priorityOperationsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "l2LogsTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
        ],
        internalType: "struct IProofExecutor.StoredBlockInfo[]",
        name: "_committedBlocks",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256[]",
            name: "recursiveAggregationInput",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "serializedProof",
            type: "uint256[]",
          },
        ],
        internalType: "struct IProofExecutor.ProofInput",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "proveBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLastBlock",
        type: "uint256",
      },
    ],
    name: "revertBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPendingGovernor",
        type: "address",
      },
    ],
    name: "setPendingGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_zkPorterIsAvailable",
        type: "bool",
      },
    ],
    name: "setPorterAvailability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "storedBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
